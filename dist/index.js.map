{"version":3,"sources":["../index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,IAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,SAAe,OAAf,CAAuB,GAAvB,EAAoC,MAApC,EAAoD,OAApD,EAAmE;iCAAG,SAAO,YAAA;;;;;AACrE,UAAA,QAAQ,GAAG,MAAM,CAAC,OAAP,CAAe,QAA1B;AACA,UAAA,IAAI,GAAG,MAAM,CAAC,OAAP,CAAe,IAAtB;AACA,UAAA,GAAG,GAAG,MAAM,CAAC,OAAP,CAAe,GAArB;AACA,UAAA,GAAG,GAAG,MAAM,CAAC,OAAP,CAAe,GAArB;AAEA,UAAA,iBAAiB,GAAG,IAAI,CAAC,KAAL,CAAW,OAAX,CAApB;AACA,UAAA,WAAW,GAAA,QAAA,CAAA;AACf,wBAAY,QADG;AAEf,oBAAQ,IAFO;AAGf,mBAAO,GAHQ;AAIf,mBAAO;AAJQ,WAAA,EAKZ,iBALY,CAAX;AAQN,UAAA,OAAO,CAAC,GAAR,CAAY,gBAAc,WAAd,GAAyB,MAAzB,GAAgC,GAA5C;AACiB,iBAAA,CAAA;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,EAAM;AAChC,YAAA,MAAM,EAAE,MADwB;AAEhC,YAAA,OAAO,EAAE;AACP,iCAAmB,KAAG;AADf,aAFuB;AAKhC,YAAA,KAAK,EAAE,UALyB;AAMhC,YAAA,QAAQ,EAAE,QANsB;AAOhC,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,WAAf;AAP0B,WAAN,CAAX,CAAA;;;AAAX,UAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AAUN,iBAAA,CAAA;AAAA;AAAA,YAAO,QAAP,CAAA;;;;AACD;;AAED,CAAC,YAAA;;;;;;;;AAES,UAAA,GAAG,GAAG,IAAI,CAAC,QAAL,CAAc,aAAd,CAAN;AACA,UAAA,MAAM,GAAG,IAAI,CAAC,QAAL,CAAc,gBAAd,CAAT;AACA,UAAA,OAAO,GAAG,IAAI,CAAC,QAAL,CAAc,iBAAd,CAAV;AACS,iBAAA,CAAA;AAAA;AAAA,YAAM,OAAO,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,CAAb,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACN,UAAA,OAAO,CAAC,GAAR,CAAY,YAAU,MAAM,CAAC,MAAjB,GAAuB,IAAvB,GAA4B,MAAM,CAAC,UAA/C;AACA,UAAA,IAAI,CAAC,SAAL,CAAe,QAAf,EAAyB,MAAM,CAAC,MAAhC;AACA,UAAA,IAAI,CAAC,SAAL,CAAe,YAAf,EAA6B,MAAM,CAAC,UAApC;;;;;;;AAEA,UAAA,OAAO,CAAC,GAAR,CAAY,4BAAZ,EAA0C,OAA1C;;;;;;;;;;;;AAEH,CAZD","file":"index.js","sourceRoot":"../src","sourcesContent":["import core = require('@actions/core');\nimport github = require('@actions/github');\n\nasync function deliver(url: string, secret: string, payload: string): Promise<Response> {\n  const workflow = github.context.workflow;\n  const repo = github.context.repo;\n  const ref = github.context.ref;\n  const sha = github.context.sha;\n\n  const additionalPayload = JSON.parse(payload);\n  const requestBody = {\n    'workflow': workflow,\n    'repo': repo,\n    'ref': ref,\n    'sha': sha,\n    ...additionalPayload\n  };\n\n  console.log(`Delivering ${requestBody} to ${url}`);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'X-GitHub-Secret': `${secret}`\n    },\n    cache: 'no-cache',\n    redirect: 'follow',\n    body: JSON.stringify(requestBody)\n  });\n\n  return response;\n}\n\n(async function () {\n  try {\n    const url = core.getInput('webhook-url');\n    const secret = core.getInput('webhook-secret');\n    const payload = core.getInput('webhook-payload');\n    const result = await deliver(url, secret, payload);\n    console.log(`Result ${result.status}: ${result.statusText}`);\n    core.setOutput('status', result.status);\n    core.setOutput('statusText', result.statusText);\n  } catch (error) {\n    console.log('Unable to deliver Web Hook', error);\n  }\n})();\n"]}